{"version":3,"sources":["components/todo-form/TodoForm.js","components/todo-list/components/Todo.js","helpers.js","components/todo-list/TodoList.js","App.js","index.js"],"names":["TodoForm","props","handleSubmit","e","preventDefault","state","todoInput","setState","handleChange","target","name","value","className","this","type","placeholder","onChange","autoComplete","onClick","aria-hidden","Component","Todo","handleClick","handleCheck","todo","id","handleRemove","handleMouseEnter","isHover","handleMouseLeave","window","navigator","maxTouchPoints","onMouseEnter","onMouseLeave","checked","completed","task","TodoList","val","todos","uuidv4","st","map","filter","JSON","parse","localStorage","getItem","setItem","stringify","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8792a64c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./TodoForm.scss\";\n\nclass TodoForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todoInput: \"\",\n    };\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.todoInput) {\n      this.props.handleSubmit(this.state.todoInput);\n    }\n    this.setState({ todoInput: \"\" });\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <form className=\"TodoForm\">\n        <input\n          value={this.state.todoInput}\n          type=\"text\"\n          placeholder=\"Write a new item\"\n          name=\"todoInput\"\n          onChange={this.handleChange}\n          autoComplete=\"off\"\n        />\n        <button onClick={this.handleSubmit}>\n          <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default TodoForm;\n","import React, { Component } from \"react\";\nimport \"./Todo.scss\";\nimport { isTouchDevice } from \"../../../helpers.js\";\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isHover: isTouchDevice(),\n    };\n  }\n\n  handleClick = () => {\n    this.props.handleCheck(this.props.todo.id);\n  };\n\n  handleRemove = () => {\n    this.props.handleRemove(this.props.todo.id);\n  };\n\n  handleMouseEnter = () => {\n    this.setState({ isHover: true });\n  };\n\n  handleMouseLeave = () => {\n    this.setState({ isHover: false });\n  };\n\n  render() {\n    return (\n      <li\n        className=\"Todo\"\n        onClick={this.handleClick}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n      >\n        <label>\n          <input\n            checked={this.props.todo.completed}\n            type=\"checkbox\"\n            onChange={this.handleClick}\n          />\n          <i></i>\n          <span>{this.props.todo.task}</span>\n          {this.state.isHover && <button onClick={this.handleRemove}>â€“</button>}\n        </label>\n      </li>\n    );\n  }\n}\n\nexport default Todo;\n","function isTouchDevice() {\n  return !!(\"ontouchstart\" in window || navigator.maxTouchPoints);\n}\n\nexport { isTouchDevice };\n","import React, { Component } from \"react\";\nimport TodoForm from \"../todo-form/TodoForm\";\nimport Todo from \"./components/Todo\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./TodoList.scss\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todos: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ todos: JSON.parse(localStorage.getItem(\"todos\")) || [] });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\n  }\n\n  handleSubmit = (val) => {\n    this.setState({\n      todos: [\n        ...this.state.todos,\n        { task: val, completed: false, id: uuidv4() },\n      ],\n    });\n  };\n\n  handleCheck = (id) => {\n    this.setState((st) => ({\n      todos: st.todos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      ),\n    }));\n  };\n\n  handleRemove = (id) => {\n    this.setState({\n      todos: this.state.todos.filter((todo) => (todo.id !== id ? todo : null)),\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"TodoList\">\n        <div className=\"TodoList-title\">\n          <h1>To Do List</h1>\n        </div>\n        <ul>\n          {this.state.todos.map((todo) => (\n            <Todo\n              todo={todo}\n              key={todo.id}\n              handleCheck={this.handleCheck}\n              handleRemove={this.handleRemove}\n            />\n          ))}\n        </ul>\n        <TodoForm handleSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n","import React, { Component } from \"react\";\nimport TodoList from \"./components/todo-list/TodoList\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TodoList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}